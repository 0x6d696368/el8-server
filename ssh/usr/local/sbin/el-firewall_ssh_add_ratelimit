#!/bin/bash
if [ $# -gt 1 ]; then
	echo "Add SSH rate limiting"
	echo
	echo "usage: ${0} [SSH_PORT]"
	echo
	echo "If SSH_PORT is not given SSH_PORT in /etc/ssh/sshd_config will be used."
	echo
	exit 1
fi
if [ $# -eq 0 ]; then
	echo "No SSH_PORT given. Using SSH_PORT from /etc/ssh/sshd_config"
	SSH_PORT="$(grep -E '^Port [0-9]+' /etc/ssh/sshd_config | grep -oE '[0-9]+' | head -n1)"
else
	SSH_PORT="${1}"
	#SSH_PORT="$(echo $SSH_CLIENT | cut -d' ' -f3)"
fi
TRIES_PER_MINUTE=3
N=$((TRIES_PER_MINUTE+1))
# rate limit tcp connections to SSH on ${SSH_PORT}/tcp to ${NPM} per minute
firewall-cmd --permanent --direct --add-rule ipv4 filter INPUT_direct 10 -p tcp --dport ${SSH_PORT} -m state --state NEW -m recent --set --name SSH_RATELIMIT
firewall-cmd --permanent --direct --add-rule ipv4 filter INPUT_direct 11 -p tcp --dport ${SSH_PORT} -m state --state NEW -m recent --update --seconds 60 --hitcount ${N} -j REJECT --reject-with tcp-reset --name SSH_RATELIMIT
firewall-cmd --permanent --direct --add-rule ipv6 filter INPUT_direct 10 -p tcp --dport ${SSH_PORT} -m state --state NEW -m recent --set --name SSH_RATELIMIT
firewall-cmd --permanent --direct --add-rule ipv6 filter INPUT_direct 11 -p tcp --dport ${SSH_PORT} -m state --state NEW -m recent --update --seconds 60 --hitcount ${N} -j REJECT --reject-with tcp-reset --name SSH_RATELIMIT
firewall-cmd --reload

